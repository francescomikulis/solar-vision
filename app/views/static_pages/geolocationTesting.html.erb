<% provide(:title, "About") %>
<h1>Geolocation</h1>

<%#= form_tag locations_path, :method => :get do %>
  <p><%#= hidden_field_tag :latitude %>
     <%#= hidden_field_tag :longitude %>
     <%#= submit_tag "Search ME", :name => nil %>
  </p>
<%# end %>



<html>
 
 <%= javascript_include_tag "sun" %>
 
 
 <script type="text/javascript" src="https://wildcatsunh-my.sharepoint.com/personal/fam1001_wildcats_unh_edu/Documents/UNH%20Projects/Spring%202017/Nasa%20Space%20Apps%20Challenge/sunShared.js"></script>
 
 <script type="text/javascript" src="https://wildcatsunh-my.sharepoint.com/personal/fam1001_wildcats_unh_edu/_layouts/15/guestaccess.aspx?docid=1b25ca5963fc94ae0bd7a7e84aaf8460d&authkey=AfzHdRp8rNPdfpMVk0jkAp0"></script>
 
 <script>
  var latitude = 23.439281;
  var longitude = -82.248350;
 
    var date = new Date();
    var month = date.getMonth() + 1;	
    var day = date.getDay();
    var year = date.getYear();
    var days = setDays();
    var pi = 3.14159265;
    var tilt = ( 23.439281 * ( pi / 180 ) );
    //ϕs = ((day of year-June 22 )/365)2pi
    
         latitude = parseFloat(prompt("Input latitude") );
         longitude = parseFloat(prompt("Input longitude") );
         month = parseInt( prompt("Input month") );
         day = parseInt( prompt("Input day") );
         hours = parseInt( prompt("Input hour") );
         minutes = parseInt( prompt("Input minutes") );
         
         var days = parseInt( setDays( month, day ) );
         spoofDate = new Date( parseInt(year), parseInt(month), parseInt(day), parseInt(hours), parseInt(minutes), 0, 0);
    
    function setDays()
    {
        var days = 0;
    	if ( month > 1 ) days += 31;
    	if ( month > 2 ) days += 28;
    	if ( month > 3 ) days += 31;
    	if ( month > 4 ) days += 30;
    	if ( month > 5 ) days += 31;
        if ( month > 6 ) days += 30;
    	if ( month > 7 ) days += 31;
    	if ( month > 8 ) days += 31;
        if ( month > 9 ) days += 30;
        if ( month > 10 ) days += 31;
        if ( month > 11 ) days += 30;
        if ( month > 12 ) days += 31;
    	days += day;
    	return days;
	}
	
    function functionOne() {
        // this works maybe just the time zone shift is fucking it up when spoofing, somehow the return value of the api is not
        // acceptable in our time zone.
        var times = SunCalc.getTimes( spoofDate, latitude, longitude );
        sunRiseH = times.sunrise.getHours();
        sunRiseM = times.sunrise.getMinutes();
        sunSetH = times.sunset.getHours();
        sunSetM = times.sunset.getMinutes();
        
        var sunset = sunSetH + sunSetM/60;
	    var sunrise = sunRiseH + sunRiseM/60;
        //ϕ – ϕs = ((hour of day-12)/24)2pi //azimuth
        var p2 = ( ( (days - 173 ) / 365 ) * 2 * pi ); //**********************
        var angle = pi / ( sunset-sunrise );
        var scalarForTimePast = ( ( hours + minutes/60 ) - ( sunset ) );
        if( scalarForTimePast > ( sunset - sunrise ) )
            scalarForTimePast = 0;
        //scalarForTimePast = Math.abs( scalarForTimePast );
            
        // WOULD FORCE THE MAX scalarForTimePast = ( sunset - sunrise ) / 2;
        
        var p1 = ( Math.sin( scalarForTimePast * angle ) ); //*************************
        //Θ = pi/2 – latitude
        if( parseFloat( p1 ) < 0 )
            p1 = 0;
        var theta = 0;
       
        var tracking = false;
        if ( tracking == true )
        {
            theta = Math.atan( Math.cos( tilt ) / ( Math.sin( tilt ) * Math.cos( p2 ) ) );
        }
        else
        {
            theta = ( pi/2 - ( latitude * pi / 180 ) );
        }
        
        var sunCoeff = 0; //this is the value we are solving for
        //final form = 1.36kw/m2*(s*r)
        sunCoeff = ( ( 1 / Math.sqrt( Math.pow( Math.cos(p2), 2 ) * Math.pow( Math.cos(tilt), 2 ) + 
        Math.pow( Math.sin(p2), 2 ) + Math.pow( Math.sin(tilt), 2 ) ) ) * ( Math.sin( theta ) * 
        Math.cos( tilt ) * p1 + ( Math.cos( theta ) * Math.cos( p2 ) * Math.sin( tilt ) ) ) ); 
        //sc = [1/√(cos2(p2)cos2(tilt)  + sin2(p2)+sin2(titl))[sin(theta)cos(tilt)p1]
        
        if( ( p1 < 0 ) || ( p1 == 0 ) )
            sunCoeff = 0;
        
        alert( "Latitude: " + latitude + "\n"
            + "Longitude: " + longitude + "\n"
            + "The sun will rise at " + times.sunrise.getHours() + ":" + times.sunrise.getMinutes() + "\n"
            + "The sun will set at " + times.sunset.getHours() + ":" + times.sunset.getMinutes() + "\n"
            + "The Sun - coefficient is: " + sunCoeff + "\n"
            + "Selected date(M/D): " + date.getMonth() + " / " + date.getDay() + "\n"
            + "Selected time: " + date.getHours() + ":" + date.getMinutes() + "\n"
            + "Angle1 efficency: " + p1 );
    }
  </script>
 
</html>

</br>
</br>
</br>

    <div class="col-xs-4 col-md-4 "></div>
    
    <div class="col-xs-4 col-md-4 ">
        <a class="btn btn-info btn-lg index_panel" href="javascript:functionOne();">
            Click me!
        </a>
    </div>
    
    <div class="col-xs-4 col-md-4 "></div>